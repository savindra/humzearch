package iit.musicrecognizer;

import iit.musicrecognizer.adapter.ResponseListAdapter;
import iit.musicrecognizer.adapter.RewardListAdapter;
import iit.musicrecognizer.app.AppController;
import iit.musicrecognizer.model.Responses;
import iit.musicrecognizer.model.Reward;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import org.json.JSONArray;
import org.json.JSONObject;

import com.android.volley.Response;
import com.android.volley.VolleyLog;
import com.android.volley.Response.Listener;
import com.android.volley.VolleyError;
import com.android.volley.toolbox.JsonArrayRequest;

import android.app.Activity;
import android.app.ProgressDialog;
import android.graphics.Color;
import android.graphics.drawable.ColorDrawable;
import android.os.Bundle;
import android.util.Log;
import android.view.Menu;
import android.view.MenuItem;
import android.widget.ListView;

public class RewardsActivity extends Activity {
	
private static final String TAG  = RewardsActivity.class.getSimpleName();
	
	int urlID;
	String host;
	private String url;
	private ProgressDialog pDialog;
	private List<Reward> rewardList = new ArrayList<Reward>();
	private ListView listView;
	private RewardListAdapter adapter;
	
	@Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.rewards_layout);
        
        urlID = R.string.url;
        host = this.getResources().getString(urlID);
        url = host + "getrewards.php";
        
        listView = (ListView) findViewById(R.id.rewardsListView);
        adapter = new RewardListAdapter(this, rewardList);
        listView.setAdapter(adapter);
        
        pDialog = new ProgressDialog(this);
        
        pDialog.setMessage("Loading...");
        pDialog.show();
        
        getActionBar().setBackgroundDrawable(new ColorDrawable(Color.parseColor("#1b1b1b")));
        
        JsonArrayRequest rewardReq = new JsonArrayRequest(url, new Listener<JSONArray>() {

			@Override
			public void onResponse(JSONArray response) {
				Log.d(TAG, response.toString());
				hidePDialog();
				
				String dateString;
				SimpleDateFormat formatter = new SimpleDateFormat("yyyy/MM/dd");
				Date date;
				
				for(int i=0; i<response.length(); i++ ){
					try {
						JSONObject obj = response.getJSONObject(i);
						Reward reward = new Reward();
						
						reward.setRewardID(obj.getString("rewardID"));
						reward.setName(obj.getString("name"));
						reward.setDesc(obj.getString("description"));
						reward.setImage(host + obj.getString("image"));
						reward.setValue(obj.getInt("value"));
						reward.setQuantity(obj.getInt("quantity"));
						
						dateString = obj.getString("date_added");
						date = formatter.parse(dateString);
						
						reward.setDate_added(date);
						
						rewardList.add(reward);
					}catch(Exception e){
						e.printStackTrace();
					}
					
				}	
			}
		}, new Response.ErrorListener() {

			@Override
			public void onErrorResponse(VolleyError error) {
				VolleyLog.d(TAG, "Error: " + error.getMessage());
                hidePDialog();	
			}
		});
        
        AppController.getInstance().addToRequestQueue(rewardReq);
        
    }
	
	private void hidePDialog() {
		if (pDialog != null) {
            pDialog.dismiss();
            pDialog = null;
        }
		
	}


    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.main, menu);
        return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // Handle action bar item clicks here. The action bar will
        // automatically handle clicks on the Home/Up button, so long
        // as you specify a parent activity in AndroidManifest.xml.
        int id = item.getItemId();
        if (id == R.id.action_settings) {
            return true;
        }
        return super.onOptionsItemSelected(item);
    }

}
